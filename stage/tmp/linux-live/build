#!/bin/bash
# Linux Live Kit version 7

export PATH=.:./tools:../tools:/usr/sbin:/usr/bin:/sbin:/bin:/

CHANGEDIR=$(dirname $(readlink -f $0))
echo "Changing current directory to $CHANGEDIR"
cd $CHANGEDIR
CWD=$(pwd)

mv -f config .config

echo KERNEL=`ls /boot/kernel-* | sort` >> .config
echo LMK=/lib/modules/`ls /lib/modules | sort` >> .config

. ./.config || return 1
. ./livekitlib || return 1

# check for mksquashfs with xz compression
if [ "$(mksquashfs 2>&1 | grep "Xdict-size")" = "" ]; then
   echo "mksquashfs not found or doesn't support -comp xz, aborting, no changes made"
   exit 1
fi

MKISOFS=$(which mkisofs)
if [ "$MKISOFS" = "" ]; then
	MKISOFS=$(which genisoimage)
fi
if [ "$MKISOFS" = "" ]; then
	echo "Cannot found mkisofs or genisoimage, stop"
	exit 3
fi

# build initramfs image

echo "Building intramfs image..."
cd initramfs
INITRAMFS=`./initramfs_create "$LIVEKITNAME"`
cd ..

# create live kit filesystem (cpio archive)
rm -Rf "$LIVEKITDATA"
BOOT="$LIVEKITDATA"/"$LIVEKITNAME"/boot
mkdir -p "$BOOT"
mkdir -p "$BOOT"/../changes
mkdir -p "$BOOT"/../modules
mv "$INITRAMFS" $BOOT/initrfs.img
cp bootfiles/* $BOOT

# build new syslinux
chmod +x tools/isolinux.bin.update
tools/isolinux.bin.update

cat bootfiles/syslinux.cfg | sed -r "s:/boot/:/$LIVEKITNAME/boot/:" > $BOOT/syslinux.cfg
cat bootfiles/syslinux.cfg | sed -r "s:/boot/:/$LIVEKITNAME/boot/:" > $BOOT/isolinux.cfg # missing!!!
cat bootfiles/bootinst.bat | sed -r "s:/boot/:/$LIVEKITNAME/boot/:" | sed -r "s:\\\\boot\\\\:\\\\$LIVEKITNAME\\\\boot\\\\:" > $BOOT/bootinst.bat

cp $KERNEL $BOOT/vmlinuz

if [ -d sb ]; then
   cp sb/* $LIVEKITDATA/$LIVEKITNAME/
else
   # create compressed bundles
   for i in $MKMOD; do
      mksquashfs /$i $LIVEKITDATA/$LIVEKITNAME/$i.$BEXT -comp xz -keep-as-directory
   done
fi

# copy rootcopy folder
if [ -d rootcopy ]; then
   cp -a rootcopy $LIVEKITDATA/$LIVEKITNAME/
fi

# create ISO for CD image
echo "Creating ISO file for CD boot..."
cd "$LIVEKITDATA"
TARGET=/mnt/z
if [ ! -d $TARGET ]; then
   TARGET=/tmp
fi

case ${ask_arch} in
1)	ARCH=x86_32	;;
2)	ARCH=x86_64	;;
*)	echo "Unkown choice '${ask_arch}' !" ; sleep 3 ; exit 1 ;;
esac

timedate=`date +"%m-%d-%Y-%T"`

mkisofs -o "/$LIVEKITNAME-$ARCH-${timedate}.iso" -v -J -R -D -A "$LIVEKITNAME" -V "$LIVEKITNAME" -no-emul-boot -boot-info-table -boot-load-size 4 -b "$LIVEKITNAME"/boot/isolinux.bin -c "$LIVEKITNAME"/boot/isolinux.boot . >/dev/null 2>/dev/null || return 1

cd ..
rm -rf "$LIVEKITDATA"
